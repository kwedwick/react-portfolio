{"version":3,"sources":["components/Button/index.js","components/Nav/index.js","components/About/index.js","components/Projects/Cards.js","components/Projects/Projects.js","components/Footer/index.js","components/Resume/index.js","components/Contact/index.js","utils/helpers.js","App.js","serviceWorker.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","Nav","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","About","Cards","props","console","log","href","data-category","label","src","alt","text","projectList","id","Projects","map","project","key","Footer","target","aria-label","Resume","numPages","setNumPages","pageNumber","onDocumentLoadSuccess","file","onLoadSuccess","ContactForm","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","string","formValue","charAt","toUpperCase","slice","isValid","test","String","toLowerCase","validateEmail","value","length","onSubmit","preventDefault","htmlFor","onBlur","defaultValue","row","App","path","exact","component","Contact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.692d3392.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to='/react-portfolio/contact/' className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Button } from '../Button/index';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if (window.innerWidth <= 960) {\n            setButton(false);\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton)\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <Link to=\"/react-portfolio/\" className=\"navbar-logo\" onClick={closeMobileMenu}>Keegan Wedwick</Link>\n                    <div className=\"menu-icon\" onClick={handleClick}>\n                        <i className={click ? 'fa fa-times' : 'fa fa-bars'} />\n                    </div>\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className='nav-item'>\n                            <Link to='/react-portfolio/' className='nav-links' onClick={closeMobileMenu}>\n                                About\n                        </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/react-portfolio/projects' className='nav-links' onClick={closeMobileMenu}>\n                                Projects\n                        </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/react-portfolio/resume' className='nav-links' onClick={closeMobileMenu}>\n                                Resume\n                        </Link>\n                        </li>\n                            <li>\n                                <Link\n                                    to='/react-portfolio/contact/'\n                                    className='nav-links-mobile'\n                                    onClick={closeMobileMenu}\n                                >\n                                    Contact Me\n                                </Link>\n                            </li>\n                    </ul>\n                        {button && <Button buttonStyle='btn--outline'>Contact</Button>}\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Nav\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div className=\"about\">\n            <h1>About Me</h1>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum quae ad nisi expedita aut quis dolorem, laborum adipisci similique eum cum atque, at sit corrupti cupiditate ut totam voluptate veniam.</p>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react';\nimport { ExternalLink } from 'react-external-link';\n\nfunction Cards({props}) {\n    console.log(props)\n    return (\n    \n            <li className=\"cards__item\">\n                <ExternalLink className=\"cards__item__link\" href={props.href}>\n                    <figure className=\"cards__item__pic-wrap\" data-category={props.label}>\n                        <img className=\"card__img\" src={props.src} alt={props.alt}/>\n                    </figure>\n                    <div className=\"cards__item__info\">\n                        <h5 className=\"cards__item__text\">{props.text}</h5>\n                    </div>\n                </ExternalLink>\n            </li>\n    )\n}\n\nexport default Cards\n","import React from 'react'\nimport Cards from './Cards'\nimport { Row, Container, Card, Col } from 'reactstrap';\n\n\n\n//my projects\nconst projectList = [\n    {\n        id: '1',\n        src: './assets/images/tech-blog.jpg',\n        text: 'Placeholder Project',\n        label: 'coding language',\n        href: \"https://blooming-citadel-66585.herokuapp.com/\",\n        alt: \"project one placeholder\"\n    },\n    {\n        id: '2',\n        src: './assets/images/tech-blog.jpg',\n        text: 'A simple tech blog website that allows the user to sign up, post, and comment.',\n        label: 'Node.js',\n        href: \"https://blooming-citadel-66585.herokuapp.com/\",\n        alt: \"project two tech blog\"\n    },\n    {\n        id: '3',\n        src: './assets/images/work-day-scheduler.jpg',\n        text: 'A Work Day Scheduler that using jquery and moment.js to check the time and adjusts the class of the hours as the time passes.',\n        label: 'Moment.js & Jquery',\n        href: \"https://kwedwick.github.io/weekday-scheduler/\",\n        alt: \"project three work day scheduler\"\n    },\n    {\n        id: '4',\n        src: './assets/images/password-generator.jpg',\n        text: 'Random Password Generator using basic JavaScript to take in user input through the form.',\n        label: 'JavaScript',\n        href: \"https://kwedwick.github.io/generate-password-challenge/\",\n        alt: \"project four random password generator\"\n    },\n    {\n        id: '5',\n        src: './assets/images/pwa-budget-tracker.jpg',\n        text: 'A budget tracker that uses basic PWA systems for use offline.',\n        label: 'PWA',\n        href: \"https://protected-bastion-93932.herokuapp.com/\",\n        alt: \"project five progressive web application for budget tracking\"\n    }\n];\n\n\n\nfunction Projects() {\n\n    return (\n        \n        <div className=\"project\">\n            <h1>Web Dev Projects</h1>\n            <div className=\"cards__container\">\n                <div className='cards__wrapper'>\n                    <ul className='cards__items'>\n                        {/* <Cards props={props} /> */}\n                        {projectList.map(project => {\n                            console.log(project)\n                            return (<Cards props={project} key={project.id} />)\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Projects\n","import React from 'react';\nimport { ExternalLink } from 'react-external-link';\n\nfunction Footer() {\n    return (\n        <footer className='footer-container'>\n            <div className='social-icons'>\n                <ExternalLink\n                    className='social-icon-link instagram'\n                    href='https://www.instagram.com/wedkee88/'\n                    target='_blank'\n                    aria-label='Instagram'\n                >\n                    <i className='fa fa-instagram' />\n                </ExternalLink>\n                <ExternalLink\n                    className='social-icon-link twitter'\n                    href='https://github.com/kwedwick'\n                    target='_blank'\n                    aria-label='Twitter'\n                >\n                    <i className='fa fa-github' />\n                </ExternalLink>\n                <ExternalLink\n                    className='social-icon-link twitter'\n                    href='https://www.linkedin.com/in/keegan-wedwick/'\n                    target='_blank'\n                    aria-label='LinkedIn'\n                >\n                    <i className='fa fa-linkedin' />\n                </ExternalLink>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { Document, Page } from 'react-pdf';\n\n\nfunction Resume() {\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n    }\n    return (\n        <div className=\"resume\">\n            <h1>Resume</h1>\n            <Document file=\"\" //https://drive.google.com/file/d/17r6iZtkGYkwokw6OJNCxX6MZlJB9gtmN/view?usp=sharing\n                onLoadSuccess={onDocumentLoadSuccess} onLoadSuccess={onDocumentLoadSuccess}\n            >\n                <Page pageNumber={pageNumber} />\n            </Document>\n            <p>Page {pageNumber} of {numPages}</p>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum quae ad nisi expedita aut quis dolorem, laborum adipisci similique eum cum atque, at sit corrupti cupiditate ut totam voluptate veniam.</p>\n        </div>\n    )\n}\n\nexport default Resume\n","import React, { useState } from 'react';\nimport { validateEmail, capitalizeFirstLetter } from '../../utils/helpers';\nimport '../Button/Button.css'\n\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function handleChange(e) {\n        const formValue = capitalizeFirstLetter(e.target.name)\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length) {\n                setErrorMessage(formValue + ' is required.');\n            } else {\n                setErrorMessage('');\n            }\n        }\n\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n\n    return (\n        <section className=\"contact\">\n            <div className=\"contact-div\">\n                <div className=\"contact-wrapper\">\n                    <h1>Contact Me</h1>\n                    <form id=\"contact-form\" className=\"contact-container\" onSubmit={handleSubmit}>\n\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" name=\"name\" onBlur={handleChange} defaultValue={formState.name} />\n\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input type=\"email\" name=\"email\" onBlur={handleChange} defaultValue={formState.email} />\n\n                        <label htmlFor=\"message\">Message:</label>\n                        <textarea name=\"message\" row=\"5\" onBlur={handleChange} defaultValue={formState.message} />\n\n                        {errorMessage && (\n                            <div>\n                                <p className=\"error-text\">{errorMessage}</p>\n                            </div>\n                        )}\n                        <button type=\"sumbit\" className=\"btn--outline\">Submit</button>\n                    </form>\n                </div>\n            </div>\n\n\n        </section>\n    );\n}\n\nexport default ContactForm;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './components/About';\nimport Projects from './components/Projects/Projects';\nimport Footer from './components/Footer';\nimport Resume from './components/Resume';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route path='/react-portfolio/' exact component={About}/>\n          <Route path='/react-portfolio/projects' component={Projects} />\n          <Route path='/react-portfolio/resume' component={Resume} />\n          <Route path='/react-portfolio/contact' component={Contact} />\n        </Switch>\n      </Router>\n      <main></main>\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}